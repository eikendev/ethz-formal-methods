theory P1
begin

section{* P1 protocol *}

/*
 * A -> B : x
 * B -> A : [x]k(A,B)
 */

/* TODO: Do we need to explicitly check if the key is uni-directional? */
/* TODO: Can the intruder act as a regular participant? */

builtins:
  symmetric-encryption

functions:
  hmac/2

equations:
  hmac(m, k) = senc(m, k)

/* Set up long term pre-shared key for A and B. */
rule Setup_PSK:
    [ Fr(~k)
    ]
  --[]->
    [ !St_PSK($A, $B, ~k)
    ]

/* TODO: Do we need a reveal for B? */
rule Reveal_PSK:
    [ !St_PSK(A, B, k) ]
  --[ Reveal(A) ]->
    [ Out(k) ]

/* Initialize thread for role A. */
rule A_0:
    [ Fr(~id)
    , !St_PSK(A, B, k)
    ]
  -->
    [ St_A_0(A, ~id, B, k)
    ]

/* Initialize thread for role B. */
rule B_0:
    [ Fr(~id)
    , !St_PSK(A, B, k)
    ]
  -->
    [ St_B_0(B, ~id, A, k)
    ]

/* Send the nonce from role A to role B. */
rule A_1:
    [ Fr(~x)
    , St_A_0(A, id, B, k)
    ]
  -->
    [ St_A_1(A, id, B, k, ~x)
    , Out(<'NONCE', ~x>)
    ]

/* Receive nonce from role A. */
rule B_1:
    [ St_B_0(B, id, A, k)
    , In(<'NONCE', x>)
    ]
  --[ Running(B, A, <'I', 'R', x>) ]->
    [ St_B_1(B, id, A, k, x)
    ]

/* Return the HMAC of the nonce to role A. */
rule B_2:
    [ St_B_1(B, id, A, k, x)
    ]
  -->
    [ St_B_2(B, id, A, k, x)
    , Out(<'HMAC', hmac(x, k)>)
    ]

/* Receive the HMAC from role B. */
rule A_2:
    [ St_A_1(A, id, B, k, x)
    , In(<'HMAC', hmac(x, k)>)
    ]
  --[ Commit(A, B, <'I', 'R', x>)
    , Honest(A)
    , Honest(B)
    , Finish() ]->
    [ St_A_2(A, id, B, k, x)
    ]

/* TODO: Indicate whether or not this lemma gets verified. */
lemma executable:
  exists-trace
    "Ex #i. Finish() @i & not (Ex A #j. Reveal(A)@j)"

/* TODO: Indicate whether or not this lemma gets verified. */
lemma injectiveagreementINITIATOR:
  "All a b t #i.
    Commit(a,b,<'I','R',t>) @i
    ==> (Ex #j. Running(b,a,<'I','R',t>) @j
        & not (Ex a2 b2 #i2. Commit(a2,b2,<'I','R',t>) @i2
                           & not (#i2 = #i)))
              | (Ex X #r. Reveal(X)@r & Honest(X) @i)"

end
